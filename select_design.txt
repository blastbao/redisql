查询设计

1，单表查询：
根据WHERE条件过滤表中的记录，筛选符合条件的记录id；然后根据SELECT的选择列使用hmget选择相应的列进行返回最终结果。

SELECT 字段 
FROM 表名 
WHERE 条件表达式

在where条件中出现的列必须建立索引，否则提示用户建立索引，设计简单起见，索引只支持单列索引，当然创建多列索引系统是支持的，不过查询时目前不支持使用

1）单表无索引查询原理：
例：
SELECT * 
FROM STUDENT 
WHERE SNO = '1';
分析器先找到关键字SELECT，然后跳到FROM关键字将STUDENT表导入内存，并通过指针p1找到第一条记录，接着找到WHERE关键字计算它的条件表达式，如果为真那么把这条记录装到一个虚表当中，p1再指向下一条记录。
如果为假那么p1直接指向下一条记录，而不进行其它操作。一直检索完整个表，关把虚表返回给用户。

2）这里采用的是必须建立索引(例中我们为SNO建立索引)，查询时直接使用“zrange key 1 1”即可获取符合SNO＝‘1’对应的id，然后根据id找出对应的选择列即可。

单表支持 ＝ != like in > >= < <=查询

2，两表连接查询：对两表求积（笛卡尔积）并用ON条件和连接连接类型进行过滤形成中间表；然后根据WHERE条件过滤中间表的记录，并根据SELECT指定的列返回查询结果。
3，多表连接查询：先对第一个和第二个表按照两表连接做查询，然后用查询结果和第三个表做连接查询，以此类推，直到所有的表都连接上为止，最终形成一个中间的结果表，
然后根据WHERE条件过滤中间表的记录，并根据SELECT指定的列返回查询结果.